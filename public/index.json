[{"content":"Hey there, I'm Excel Ojo â€“ a software engineer and cyber security reasearcher\nThroughout my illustrious career, I've been burdened with the 'opportunity' to toil endlessly on an exhaustive array of software projects spanning diverse domains and technologies. Should you dare to explore the vast expense of my endeavors, you'll find most of these 'masterpieces haunting my gloriousGitHub profile.\nAs a self-proclaimed maestro of chaos, I take pride in crafting applications that dance precariously on the edge of functionality, ensuring they crash and burn across an eclectic mix of operating systems. In my coding circus, I dazzle spectators with the death-defying act of seamlessly switching between the beloved Vim for my editing escapades and, on occasion, delving into the realms of Rust, C, Python, and Java... you know, just to keep the thrill alive. But of course, who can resist the irresistible allure of Golang, perpetually beckoning me from dawn till dusk?\nSwitching between languages? Piece of cake! With my uncanny knack for clear task understanding, I glide through coding multiverses like a seasoned cosmic traveler. Along the way, I've wrestled with all sorts of databases â€“ from the relational realms of MySQL and PostgreSQL to the NoSQL wonderlands of MongoDB, and even the mystical domains of in-memory databases like Redis. It's a coding carnival, and I'm the ringmaster.\nAh, when it comes to constructing large systems with more moving parts than a circus, having a crystal-clear grasp of the architecture is absolutely key. We're talking about laying the groundwork for something that'll stand the test of time, like a skyscraper made of code!\nNow, me? I'm all about the microservices life for handling these behemoths. It's like having an army of tiny, fault-tolerant soldiers ready to leap into action at a moment's notice. And let's not forget about scalability â€“ I design my architecture to sprawl horizontally like a sprawling metropolis, making sure load balancing and caching are as smooth as silk for juggling all that traffic and data. It's a bit like being the master conductor of a chaotic symphony â€“ and trust me, I've got the baton!\u0026quot;\nAh, for the upkeep of these mammoth systems, I'm all about preaching the gospel of clear and concise code. It's like having a well-lit roadmap in the dark alleys of programming â€“ you want your fellow coders to easily find their way, don't you?\nAnd let's not forget about the holy scripture of documentation! I'm talking about laying down the law with comprehensive guides that break down the system architecture like it's storytime. Not only does it help teammembers find their feet in this crazy code jungle, but it also acts as a trusty troubleshooter for when things inevitably go haywire. It's like having a GPS for your code â€“ and trust me, we're all gonna need it at some point\nI've had the opportunity to build microservices architecture, backend services, DevOps workflows, and command-line utilities with Go, and my experience with them has been exceptional. From handling concurrency and scalability to achieving high throughput performance and ensuring readability, Go has consistently delivered outstanding results.\nMost of my personal projects are written in Go. For instance, there is a mmorpg game that I play every day, where I utilize Go to concurrently delete items with 0 durability when they become abundant. I've also shared this tool with others, as they find it beneficial for their needs. The joy lies in being able to wake up and effortlessly write code for something I envision, and seeing it work seamlessly remgame. Additionally, I've worked on other projects with Go, all of which have been successful and are running smoothly.\nAh, Python â€“ it's been quite the rollercoaster ride! While our relationship may have its ups and downs, there's no denying the sheer power and versatility of this language. Despite the occasional bumps in the road, I find myself drawn back to Python time and time again.\nDuring my final year project at Uni, Python became my trusty companion as I delved into the realm of deepfakes, crafting models to distinguish fact from fiction in the digital realm. And let's not forget its role in data analysis and visualization â€“ seems like Python's fingerprints are everywhere!\nBut it didn't stop there â€“ Python even helped me build a stock exchange app using Django. Yet, like any relationship, we've had our disagreements. One recurring headache was the constant updating of the requirements.txt file due to package updates, leading to a never-ending cycle of installations and updates. But hey, all's fair in love and coding, right?\nMy proudest moments as an engineer are like little victories that happen all the time. There's nothing quite like the feeling of seeing my solutions come to life and being appreciated by others. One memory that stands out is when I crafted a script for a game â€“ the excitement from the gamers in the Discord channel was contagious, and their joy was infectious.\nI thrive on tackling challenges head-on, leaving no stone unturned until I find the perfect solution. Persistence is my middle name, and I've yet to meet a problem that I couldn't crack with a little bit of determination and a whole lot of elbow grease. It's these moments of triumph that remind me why I love what I do â€“ making a tangible difference in people's lives, one problem at a time.\n","permalink":"//localhost:1313/journal/how_i_want_to_write/","summary":"preferrably how i will like to be writing all my .md","title":"How i want to write"},{"content":"Credentials ðŸ”— Certificate ðŸ”— Credly Badge ðŸŽ¬ YouTube Video Introduction I\u0026rsquo;ve passed the AWS Solutions Architect - Associate certification exam with just a month of preparation while pursuing MSc in Applied Computing at the University of Toronto and working as a DevOps Intern at 16Bit, a med-tech startup based in Toronto. In this article, Iâ€™ll be sharing everything about this exam, my preparation strategies and tips. So, if you have plans on taking this exam anytime soon, read this article till the end.\nWhat is AWS Developer - Associate Certification With the rise of Cloud Computing, companies have constantly been shifting from running their infrastructure on-premise, which is hard to scale and manage, to running them on cloud, which offers far more elasticity in terms of scaling and resiliency in case of disasters.\nThe AWS Developer - Associate certification validates your expertise in developing and maintaining applications on AWS, which is the leading cloud provider today. It focuses on AWS core services, development tools and deployment practices. It can help developers enhance their skills, increase their earning potential, and demonstrate their proficiency to potential employers.\nExam Format In this exam, you will get 65 questions and 130 minutes to answer them which means you get 2 mins per question. Out of the total questions, 15 will be experimental (ungraded). But you will not know which ones are experimental, otherwise you will skip them. So, you need to attempt every question on the test.\nYou will be graded on a percentile basis on a scale of 100 to 1000 where you will nead to score more than 720 to pass the exam. Based on this information, you can approximate that you will have to answer about 72% of the questions correctly in order to pass. You can refer this link for more details on how scoring works.\nThis exam has a pass / fail criteria. If you pass the exam, your score doesn\u0026rsquo;t really matter. It will only be written on your score report for your reference. It will not be mentioned anywhere on the certificate.\nThe cost of taking this exam is 150 USD but I got 50% off, so I paid just 75 USD. The way it works is that if you passed your first AWS certification exam, then you can get 50% off on the second one if you take it within a year of taking the first certification. Since, I passed the AWS Solutionâ€™s Architect - Associate Certification exam in the month of May last year, I was eligible for the discount.\nMy Preparation Strategy I prepared for about 4-6 hours everyday for a months while being a grad student and working as a DevOps intern. I took the AWS Developer - Associate Course by Stephane Maarek which is available on Udemy. Preparing for the DVA exam was a bit easy for me as I had already passed the SAA exam, because the concepts overlap to some degree between the two certification exams.\nOnce I was done with the course, I bought three sets of practice tests on Udemy that are provided by:\nStephane Maarek Jon Bonso Neal Davis Each of these practice test packages contain 6 practice tests. Additionally, a free practice test is provided with the course.\nWhile going through the course, I took easy to follow notes in Notion. Additionally, while taking the practice tests, I saved the questions along with their explanations, into a Notion page, for the questions that I got wrong and the questions that I found difficult to answer. This would come in handy later when I revise everything before the exam.\nI also created a notion page for quick notes to include information thatâ€™s hard to remember, things like message retention duration of a Kinesis Data Stream or the IOPS limits for the different EBS volume types. I just glanced through this stuff before taking the actual test to have all that information fresh in my memory.\nðŸ”— My notes\nTaking the Test You can take the test either at a testing center or online at the comfort of your home. I would suggest you go for a testing center if it is available nearby. The experience is so smooth and you don\u0026rsquo;t have to worry about internet connectivity or proctoring issues. I took the test at a testing center and my experience was good.\nLast year, I took the AWS SAA exam online from my home and my experience was pretty bad. The proctor asked me not to move my lips while reading the questions. So, the proctoring was way too strict. I was stressed and mindful about my body position, and was not able to focus well on the actual test. Another problem with taking the test online is that if the proctor cancels your exam, you won\u0026rsquo;t get a refund. You will have to rebook and retake the test at a later date.\nTips for taking the AWS SAA exam Take as many practice tests as you can. They will give you an idea of the kind of topics that come up in the exam most often. Also, the questions in these practice tests match very well with the ones appearing on the actual exam.\nThe amount of information that you will have to go through to prepare for this exam is enormous. You not only need a good understanding of the various AWS resources and architectures, but you will also have to remember a lot of information. So, keep at least 3 days to revise your notes before the exam.\nThat\u0026rsquo;s all folks That was all about the AWS Developer - Associate Certification exam. Thanks a lot for reading!\n","permalink":"//localhost:1313/journal/aws-dva-certification/","summary":"Credentials ðŸ”— Certificate ðŸ”— Credly Badge ðŸŽ¬ YouTube Video Introduction I\u0026rsquo;ve passed the AWS Solutions Architect - Associate certification exam with just a month of preparation while pursuing MSc in Applied Computing at the University of Toronto and working as a DevOps Intern at 16Bit, a med-tech startup based in Toronto. In this article, Iâ€™ll be sharing everything about this exam, my preparation strategies and tips. So, if you have plans on taking this exam anytime soon, read this article till the end.","title":"I passed the AWS DVA Certification Exam"},{"content":"Hey there, I'm Excel Ojo â€“ a software engineer and cybersecurity researcher. Throughout my career, I've worked on various software projects spanning diverse domains and technologies, most of which are available on my GitHub profile.\nI hold a degree in cybersecurity, encompassing coursework in mathematics, software engineering, cryptography, and related fields. This educational background has equipped me with a robust foundation in both theoretical principles and hands-on applications.\nIn particular, I have dedicated substantial time to mastering Golang throughout the day, alongside cultivating proficiency in Rust, C, Java, Javascript and Python. Leveraging Go extensively, I have contributed to the development of microservices, backend services, DevOps workflows, and command-line utilities.\nMy most gratifying experiences as an engineer derive from successfully deploying solutions that resonate with users. I am committed to tackling challenges with tenacity, endeavoring to enact meaningful change in individuals' lives through incremental problem-solving.\nIn my leisure time, I dedicate myself to refining my problem-solving abilities through engaging with LeetCode challenges. Additionally, I occasionally enjoy exploring virtual environments within video games as a means of relaxation and mental stimulation.\nread how i will like to write\n","permalink":"//localhost:1313/daall/","summary":"Hey there, I'm Excel Ojo â€“ a software engineer and cybersecurity researcher. Throughout my career, I've worked on various software projects spanning diverse domains and technologies, most of which are available on my GitHub profile.\nI hold a degree in cybersecurity, encompassing coursework in mathematics, software engineering, cryptography, and related fields. This educational background has equipped me with a robust foundation in both theoretical principles and hands-on applications.\nIn particular, I have dedicated substantial time to mastering Golang throughout the day, alongside cultivating proficiency in Rust, C, Java, Javascript and Python.","title":""},{"content":"In the ever-changing tech realm, the quest for crafting cool and impactful projects is a thrilling ride that keeps evolving. Picture this as a tour through a gallery of projects â€“ each piece, a vibrant work of my creativity, unveiling a bunch of skills and tech magic tricks that'll make you go \u0026quot;Wow!\u0026quot; ðŸŽ©âœ¨. Buckle up for the journey! ðŸš€\n- An AI-Powered Conversationalist Created an AI-powered Slackbot that stands out for its ability to respond intelligently to diverse and random queries. The Slackbot undergoes continuous training, adapting and learning to enhance its conversational capabilities.\nTechnologies:\nGolang\nWit.ai and Wolfram\nSlack framework api\nAWS\nNatural Language Processing (NLP)\n- Command-Line Wordle Game Developed a command-line interface (CLI) application that executes the Wordle game, providing users with distinct color cues for correct and incorrect responses.\nTechnologies:\nC and Python\n- Luhn Algorithm for Credit Card Validation: Ensuring Security Implemented the Luhn Algorithm in Python and C, a fundamental checksum formula employed for credit card number validation, contributing to enhanced security measures.\nTechnologies:\nPython\n- Reverse Playback: Unveiling the World of Audio Manipulation Developed a Command Line Interface (CLI) project in C for the reversal of audio data, providing users with a tool for creative audio manipulation.\nTechnologies:\nC\n- Gaming Script: Streamlining Daily Gameplay Crafted a script designed to simplify the removal of items with zero durability in a daily-played game. Recognizing its broader utility for fellow players, the script was open-sourced for wider accessibility.\nTechnologies:\nGolang\nThe Game API\n- Human Resource Management System: A Comprehensive HR Solution Developed a comprehensive Human Resource Management System (HRMS) with CRUD functionalities, implemented using MongoDB for efficient data management.\nTechnologies:\nGo-Fiber\nMongoDB\nAWS\n- Domain Checker: A Command-Line Tool for Verification Created a straightforward command-line interface (CLI) application for domain verification, streamlining the process of checking domain authenticity.\nTechnologies:\nGolang\nAWS\nMy portfolio reflects a journey of my exploration in our world, showcasing my versatile skill set and my commitment to utilizing technology for solving diverse challenges. Each project contributes to the ever-expanding landscape of technological advancements, and the open-sourcing of certain solutions reflects a dedication to knowledge sharing and collaboration within the tech community.\n","permalink":"//localhost:1313/project/","summary":"In the ever-changing tech realm, the quest for crafting cool and impactful projects is a thrilling ride that keeps evolving. Picture this as a tour through a gallery of projects â€“ each piece, a vibrant work of my creativity, unveiling a bunch of skills and tech magic tricks that'll make you go \u0026quot;Wow!\u0026quot; ðŸŽ©âœ¨. Buckle up for the journey! ðŸš€\n- An AI-Powered Conversationalist Created an AI-powered Slackbot that stands out for its ability to respond intelligently to diverse and random queries.","title":""}]