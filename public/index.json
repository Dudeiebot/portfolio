[{"content":"~Guide to Using Neovim This guide provides essential tips and commands when using Neovim. Instead of spending time searching for specific commands, you can find the most important ones right here. These commands can be customized in your nvim setup but most of them are defualt, and most of them are customed to my taste. Check my setup\nKey Modes in Neovim Normal Mode: The default mode for Neovim. Command Mode: Used for executing commands. Visual Mode: For selecting and copying (yanking) text. Insert Mode: For inserting text. NVIM_TREE Create a File: Press a in the nvim_tree pane. You can also create folder by adding \\ at the end of the name. Ensure you check the location before creating new items. Open a File: Use o or enter on the file\u0026rsquo;s directory. Toggle nvim_tree: Press ctrl-n. Navigate: Use ctrl-h to navigate between nvim and the tree pane. Commands That Work Ensure you are in normal mode for these commands to work.\nChange Theme: Use \u0026lt;leader\u0026gt;th to customize your theme. Suspended Mode: ctrl-z takes you to terminal suspended mode. Use fg to return to your buffer. Open Folders: Use \u0026lt;leader\u0026gt;sB without nvim-tree. Close Buffer: Close an opened buffer with \u0026lt;leader\u0026gt;x or :bd. Navigate in Command Mode: Use esc or ctrl-c to navigate. Navigation Use j, k, l, and h for navigation. Speed up with B, W, J, K, L, H, also use it for backward movement. Combine navigation keys with numbers for faster movement (e.g 50j). Jump between functions with { and }. Go to the beginning or end of a file with gg and GG, respectively. Navigate directly to a line with :\u0026lt;line_number\u0026gt;. Split Screen Horizontal Split: Use split. Vertical Split: Use vsplit. Saving and Quitting Save: Use :w. Quit: Use :q or :q! for a hard quit or maybe get stuck forever. Terminal et Neovim Open Terminal: Use ctrl-t for a floating terminal, \u0026lt;leader\u0026gt;h or \u0026lt;leader\u0026gt;v for horizontal or vertical splits. Show Opened Terminals: Use \u0026lt;leader\u0026gt;pt. Macros Record a Macro: Press q followed by the key you want to save the command sequence to. End recording with q and replay the macro with @ followed by the key. Searching Use / to search within the file. Navigate through instances with n (forward) and N (backward). CMD on the go Yanking a line with yy, yanking a word with ye, yanking matching sequence with y%. zz to centre your cursor. Deleting a line with dd, deleting a word with de,deleting matching sequence with d%. If you want to Change the same words(let say in a json file), use shift ; which displays some certain strings that can follow this patterns/word you want to change/new word. Go to definitions, use ctrl-] Use gc or gd for comment out a line of code. Switch between lowercase and uppercase with ~. Use . to repeat the last action. * for checking instances where word are used in the file and moving through all highlighted words o for taking you below a new line and O for taking you above a new line, also you get to be in insert mode also. x delete a letter, and you can add nos to the back also for more deleting. Use r to replace a letter, R for replacing multiple letters. Highlight lines fully with shift-v and the curly brackets. Indent with \u0026lt; or \u0026gt;. A takes you to the end of the line, 0 takes you to the beginning of a line and capital I takes to the beginning and putting in insert mode. % comes in handy in between brackets to flip around them, you can move from the bracket opening { to the bracket close } with the sign, or around other brackets also. Talks An easy way to remember d as Delete and c as Change, w as Forward and b as backward, t as to and f as find, b as beginning and e as end.\nFor real this are just normal english, like d 2 w called delete 2 word will practically delete 2 word.\ndt and ct followed by the lettering or symbol you want to delete can be helpful also, it will equally delete of change to the side.\n","permalink":"//localhost:1313/journal/regarding_nvim/","summary":"noob just like you know","title":"noob.md"},{"content":"In my setup page, you\u0026rsquo;ll find a list of all my daily go-to tools and some awesome applications I use. We\u0026rsquo;re going to delve deeper into the setup and discuss what I find interesting in those apps, as well as touch on my Neovim (nvim) setup. Additionally, you can check out [noob.Md](link to it) for more information regarding the nvim setup and how to integrate it all together.\nI am one of those young software engineers who started with Notepad++, then progressed to Sublime Text, before eventually using VSCode and nvim. Throughout my years of development and experimentation with different text editors, one crucial aspect to consider is what makes coding easier and more lightweight for your computer system. This is particularly important because you don\u0026rsquo;t want to be the engineer who doesn\u0026rsquo;t improve as they code. I vividly recall the times when using Notepad++, where we didn\u0026rsquo;t have assisted extensions or co-pilot features like we do now; it was all about hard-coding and facing reality.\nI remember my younger self installing Notepad++ on those HP systems with just 2GB of RAM, trying not to overload the system or hear the fan kick into high gear When it comes to lightweight options, engineers\u0026rsquo; preferences can vary because each individual understands their system specifications and what will ensure smooth operation without any hiccups. Personally, I\u0026rsquo;ve been using nvim for several years now, having transitioned from VSCode. However, lightweight functionality wasn\u0026rsquo;t my primary consideration during the switch.\nCurrently, my system experiences no RAM issues or overheating, but that doesn\u0026#39;t deter me from using lightweight editors that enhance my coding skills and add an extra cool factor, haha! I grew to appreciate nvim + tmux for its ease of terminal manipulation and customizable keyboard shortcuts, which brought me true joy.\nI use iTerm2 as my terminal emulator, which has been reliable for me, aside from a minor hiccup when attempting to update it directly from the app. It mistakenly installed the nightly version, which I had to delete and reinstall. Additionally, I recommend terminal emulators like Alacritty and Wezterm, although I personally haven\u0026rsquo;t used them, they\u0026rsquo;re highly regarded among software engineers.\nFor terminal multiplexing, I rely on tmux, an essential tool compatible with any of the aforementioned terminal emulators. The key to mastering tmux lies in configuring its prefix, which you can customize to your liking. I\u0026rsquo;ve shared an example of my tmux.conf file, which demonstrates how to create the perfect setup. Additionally, tmux offers amazing plugins like resurrect and continuum, both of which help restore previous terminal windows in case of accidental closure or power outage. Check out my minimal CMD guide for more on tmux.\nAs for my shell, I use zsh, enhanced by Oh My Zsh for added vibe and cool features. Another handy tool in my terminal arsenal is thefuck, which helps me recall forgotten commands or their syntax.\nIn terms of workspace and knowledge management tools, I utilize Obsidian and Notion. These tools have greatly aided me in organizing notes and staying ahead when learning or practicing something new. Obsidian\u0026rsquo;s Vim plugin allows note-taking with a terminal-like interface, which has significantly improved my vim skills.\nFor browsing, I use various internet browsers such as Safari, Chrome, Brave, and Edge, each for personal reasons. However, I avoid using Arc due to its tendency to overheat my computer, despite positive experiences reported by others.\nThroughout this journey, I\u0026rsquo;ve learned that it\u0026rsquo;s essential to find a setup that works best for you, even if it means deviating from the crowd. This process may involve installing and uninstalling various tools, but once you\u0026rsquo;ve found your ideal setup, coding becomes a daily joy and motivation.\nHere are some tags for the tools in my setup üõ†Ô∏è:\nCommunication: Discord and slack Window Management: Rectangle API wiz: postman Time flow: Day Progress ","permalink":"//localhost:1313/journal/stack/","summary":"Tools I utilize, anticipate utilizing, and likely will persist in utilizing","title":"da'stack"},{"content":"Hey there, I'm Excel Ojo ‚Äì a software engineer and cyber security reasearcher\nThroughout my illustrious career, I've been burdened with the 'opportunity' to toil endlessly on an exhaustive array of software projects spanning diverse domains and technologies. Should you dare to explore the vast expense of my endeavors, you'll find most of these 'masterpieces haunting my gloriousGitHub profile.\nAs a self-proclaimed maestro of chaos, I take pride in crafting applications that dance precariously on the edge of functionality, ensuring they crash and burn across an eclectic mix of operating systems. In my coding circus, I dazzle spectators with the death-defying act of seamlessly switching between the beloved Vim for my editing escapades and, on occasion, delving into the realms of Rust, C, Python, and Java... you know, just to keep the thrill alive. But of course, who can resist the irresistible allure of Golang, perpetually beckoning me from dawn till dusk?\nSwitching between languages? Piece of cake! With my uncanny knack for clear task understanding, I glide through coding multiverses like a seasoned cosmic traveler. Along the way, I've wrestled with all sorts of databases ‚Äì from the relational realms of MySQL and PostgreSQL to the NoSQL wonderlands of MongoDB, and even the mystical domains of in-memory databases like Redis. It's a coding carnival, and I'm the ringmaster.\nAh, when it comes to constructing large systems with more moving parts than a circus, having a crystal-clear grasp of the architecture is absolutely key. We're talking about laying the groundwork for something that'll stand the test of time, like a skyscraper made of code!\nNow, me? I'm all about the microservices life for handling these behemoths. It's like having an army of tiny, fault-tolerant soldiers ready to leap into action at a moment's notice. And let's not forget about scalability ‚Äì I design my architecture to sprawl horizontally like a sprawling metropolis, making sure load balancing and caching are as smooth as silk for juggling all that traffic and data. It's a bit like being the master conductor of a chaotic symphony ‚Äì and trust me, I've got the baton!\u0026quot;\nAh, for the upkeep of these mammoth systems, I'm all about preaching the gospel of clear and concise code. It's like having a well-lit roadmap in the dark alleys of programming ‚Äì you want your fellow coders to easily find their way, don't you?\nAnd let's not forget about the holy scripture of documentation! I'm talking about laying down the law with comprehensive guides that break down the system architecture like it's storytime. Not only does it help teammembers find their feet in this crazy code jungle, but it also acts as a trusty troubleshooter for when things inevitably go haywire. It's like having a GPS for your code ‚Äì and trust me, we're all gonna need it at some point\nI've had the opportunity to build microservices architecture, backend services, DevOps workflows, and command-line utilities with Go, and my experience with them has been exceptional. From handling concurrency and scalability to achieving high throughput performance and ensuring readability, Go has consistently delivered outstanding results.\nMost of my personal projects are written in Go. For instance, there is a mmorpg game that I play every day, where I utilize Go to concurrently delete items with 0 durability when they become abundant. I've also shared this tool with others, as they find it beneficial for their needs. The joy lies in being able to wake up and effortlessly write code for something I envision, and seeing it work seamlessly remgame. Additionally, I've worked on other projects with Go, all of which have been successful and are running smoothly.\nAh, Python ‚Äì it's been quite the rollercoaster ride! While our relationship may have its ups and downs, there's no denying the sheer power and versatility of this language. Despite the occasional bumps in the road, I find myself drawn back to Python time and time again.\nDuring my final year project at Uni, Python became my trusty companion as I delved into the realm of deepfakes, crafting models to distinguish fact from fiction in the digital realm. And let's not forget its role in data analysis and visualization ‚Äì seems like Python's fingerprints are everywhere!\nBut it didn't stop there ‚Äì Python even helped me build a stock exchange app using Django. Yet, like any relationship, we've had our disagreements. One recurring headache was the constant updating of the requirements.txt file due to package updates, leading to a never-ending cycle of installations and updates. But hey, all's fair in love and coding, right?\nMy proudest moments as an engineer are like little victories that happen all the time. There's nothing quite like the feeling of seeing my solutions come to life and being appreciated by others. One memory that stands out is when I crafted a script for a game ‚Äì the excitement from the gamers in the Discord channel was contagious, and their joy was infectious.\nI thrive on tackling challenges head-on, leaving no stone unturned until I find the perfect solution. Persistence is my middle name, and I've yet to meet a problem that I couldn't crack with a little bit of determination and a whole lot of elbow grease. It's these moments of triumph that remind me why I love what I do ‚Äì making a tangible difference in people's lives, one problem at a time.\n","permalink":"//localhost:1313/journal/how_i_want_to_write/","summary":"preferrably how i will like to be writing all my .md","title":"How i want to write"},{"content":"Hey there, I'm Excel Ojo ‚Äì a software engineer and cybersecurity researcher. Throughout my career, I've worked on various software projects spanning diverse domains and technologies, most of which are available on my GitHub profile.\nI hold a degree in cybersecurity, encompassing coursework in mathematics, software engineering, cryptography, and related fields. This educational background has equipped me with a robust foundation in both theoretical principles and hands-on applications.\nIn particular, I have dedicated substantial time to mastering Golang throughout the day, alongside cultivating proficiency in Rust, C, Java, Javascript and Python. Leveraging Go extensively, I have contributed to the development of microservices, backend services, DevOps workflows, and command-line utilities.\nMy most gratifying experiences as an engineer derive from successfully deploying solutions that resonate with users. I am committed to tackling challenges with tenacity, endeavoring to enact meaningful change in individuals' lives through incremental problem-solving.\nIn my leisure time, I dedicate myself to refining my problem-solving abilities through engaging with LeetCode challenges. Additionally, I occasionally enjoy exploring virtual environments within video games as a means of relaxation and mental stimulation.\nread how i will like to write\n","permalink":"//localhost:1313/daall/","summary":"Hey there, I'm Excel Ojo ‚Äì a software engineer and cybersecurity researcher. Throughout my career, I've worked on various software projects spanning diverse domains and technologies, most of which are available on my GitHub profile.\nI hold a degree in cybersecurity, encompassing coursework in mathematics, software engineering, cryptography, and related fields. This educational background has equipped me with a robust foundation in both theoretical principles and hands-on applications.\nIn particular, I have dedicated substantial time to mastering Golang throughout the day, alongside cultivating proficiency in Rust, C, Java, Javascript and Python.","title":""},{"content":"In the ever-changing tech realm, the quest for crafting cool and impactful projects is a thrilling ride that keeps evolving. Picture this as a tour through a gallery of projects ‚Äì each piece, a vibrant work of my creativity, unveiling a bunch of skills and tech magic tricks that'll make you go \u0026quot;Wow!\u0026quot; üé©‚ú®. Buckle up for the journey! üöÄ\n- An AI-Powered Conversationalist Created an AI-powered Slackbot that stands out for its ability to respond intelligently to diverse and random queries. The Slackbot undergoes continuous training, adapting and learning to enhance its conversational capabilities.\nTechnologies:\nGolang\nWit.ai and Wolfram\nSlack framework api\nAWS\nNatural Language Processing (NLP)\n- Command-Line Wordle Game Developed a command-line interface (CLI) application that executes the Wordle game, providing users with distinct color cues for correct and incorrect responses.\nTechnologies:\nC and Python\n- Luhn Algorithm for Credit Card Validation: Ensuring Security Implemented the Luhn Algorithm in Python and C, a fundamental checksum formula employed for credit card number validation, contributing to enhanced security measures.\nTechnologies:\nPython\n- Reverse Playback: Unveiling the World of Audio Manipulation Developed a Command Line Interface (CLI) project in C for the reversal of audio data, providing users with a tool for creative audio manipulation.\nTechnologies:\nC\n- Gaming Script: Streamlining Daily Gameplay Crafted a script designed to simplify the removal of items with zero durability in a daily-played game. Recognizing its broader utility for fellow players, the script was open-sourced for wider accessibility.\nTechnologies:\nGolang\nThe Game API\n- Human Resource Management System: A Comprehensive HR Solution Developed a comprehensive Human Resource Management System (HRMS) with CRUD functionalities, implemented using MongoDB for efficient data management.\nTechnologies:\nGo-Fiber\nMongoDB\nAWS\n- Domain Checker: A Command-Line Tool for Verification Created a straightforward command-line interface (CLI) application for domain verification, streamlining the process of checking domain authenticity.\nTechnologies:\nGolang\nAWS\nMy portfolio reflects a journey of my exploration in our world, showcasing my versatile skill set and my commitment to utilizing technology for solving diverse challenges. Each project contributes to the ever-expanding landscape of technological advancements, and the open-sourcing of certain solutions reflects a dedication to knowledge sharing and collaboration within the tech community.\n","permalink":"//localhost:1313/project/","summary":"In the ever-changing tech realm, the quest for crafting cool and impactful projects is a thrilling ride that keeps evolving. Picture this as a tour through a gallery of projects ‚Äì each piece, a vibrant work of my creativity, unveiling a bunch of skills and tech magic tricks that'll make you go \u0026quot;Wow!\u0026quot; üé©‚ú®. Buckle up for the journey! üöÄ\n- An AI-Powered Conversationalist Created an AI-powered Slackbot that stands out for its ability to respond intelligently to diverse and random queries.","title":""}]